# -*- coding: utf-8 -*-
"""rag_engine_colab_safe.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1829D9y00JNOr0SFnuEqXfqd3_85PacdF

# ðŸ§  RAG Engine in Colab (FAISS + Summarization)
This notebook is a safe version of `rag_engine.py` for running on Google Colab.
"""

# âœ… Step 1: Install dependencies (Colab-safe)
!pip install sentence-transformers faiss-cpu transformers pandas tqdm

# âœ… Step 3: RAG Engine Setup
import pandas as pd
import numpy as np
import faiss
from tqdm import tqdm
from sentence_transformers import SentenceTransformer
from transformers import pipeline

class RAGTicketEngine:
    def __init__(self, path="tickets.csv"):
        self.data = pd.read_csv(path)
        self.embedder = SentenceTransformer("all-MiniLM-L6-v2")
        self.generator = pipeline("summarization", model="sshleifer/distilbart-cnn-12-6")
        self._build_vector_store()

    def _build_vector_store(self):
        texts = self.data["body"].tolist()
        self.embeddings = self.embedder.encode(texts, show_progress_bar=True)
        dim = len(self.embeddings[0])
        self.index = faiss.IndexFlatL2(dim)
        self.index.add(np.array(self.embeddings).astype("float32"))

    def query(self, query_text):
        q_emb = self.embedder.encode([query_text])[0]
        D, I = self.index.search(np.array([q_emb]).astype("float32"), k=1)
        row = self.data.iloc[I[0][0]]
        context = f"Ticket: {row.body}\nResolution: {row.resolution}"
        prompt = f"Customer asks: {query_text}\n{context}\n\nSummarize this:"
        summary = self.generator(prompt, max_length=130, min_length=30, do_sample=False)[0]["summary_text"]
        return summary.strip()

from google.colab import drive
drive.mount('/content/drive')

# Correct the path to access the file after mounting Google Drive
csv_path = "/content/drive/My Drive/Colab Notebooks/RAG/tickets.csv"
engine = RAGTicketEngine(path=csv_path)

# âœ… Step 4: Run sample queries
queries_df = pd.DataFrame({
    "id": [1, 2, 3],
    "question": [
        "Why does upload fail for large files?",
        "How do I reset my password?",
        "Why is email delivery delayed?"
    ]
})

# Remove this line: engine = RAGTicketEngine()
results = []

for _, row in tqdm(queries_df.iterrows(), total=len(queries_df)):
    qid = row["id"]
    question = row["question"]
    try:
        # Use the existing 'engine' instance
        answer = engine.query(question)
        results.append({"id": qid, "query": question, "summary": answer})
    except Exception as e:
        results.append({"id": qid, "query": question, "summary": f"ERROR: {e}"})

results_df = pd.DataFrame(results)
results_df.to_csv("query_summaries.csv", index=False)
results_df.head()

# âœ… Step 5: Download results
files.download("query_summaries.csv")